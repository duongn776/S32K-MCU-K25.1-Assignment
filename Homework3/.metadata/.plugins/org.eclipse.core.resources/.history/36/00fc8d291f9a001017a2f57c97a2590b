#include "Driver_PORT.h"
#include "Driver_GPIO.h"
#include "core_cm4.h"

#define LED_RED     PD0   // LED đỏ gắn vào Port D pin 0
#define LED_GREEN   PD15  // LED xanh gắn vào Port D pin 15
#define BTN_SW2     PC12  // Button 1 (SW2)
#define BTN_SW3     PC13  // Button 2 (SW3)

/* Prototype callback */
void Button_Event(uint32_t event);

/* Callback cho Button */
void Button_Event(uint32_t event) {
    if (event == 1) {
        /* Toggle LED đỏ */
        uint32_t state = Driver_GPIO0.GetInput(LED_RED);
        Driver_GPIO0.SetOutput(LED_RED, !state);
    }
    else if (event == 2) {
        /* Toggle LED xanh */
        uint32_t state = Driver_GPIO0.GetInput(LED_GREEN);
        Driver_GPIO0.SetOutput(LED_GREEN, !state);
    }
}

int main(void) {
    /* --- Config LED đỏ (PD0) --- */
    Driver_GPIO0.Setup(LED_RED, NULL);
    Driver_GPIO0.SetDirection(LED_RED, ARM_GPIO_OUTPUT);

    /* --- Config LED xanh (PD15) --- */
    Driver_GPIO0.Setup(LED_GREEN, NULL);
    Driver_GPIO0.SetDirection(LED_GREEN, ARM_GPIO_OUTPUT);

    /* --- Config Button SW2 (PC12) --- */
    Driver_GPIO0.Setup(BTN_SW2, Button_Event);
    Driver_GPIO0.SetDirection(BTN_SW2, ARM_GPIO_INPUT);
    Driver_GPIO0.SetPullResistor(BTN_SW2, ARM_GPIO_PULL_UP);
    Driver_GPIO0.SetEventTrigger(BTN_SW2, ARM_GPIO_TRIGGER_FALLING_EDGE);

    /* --- Config Button SW3 (PC13) --- */
    Driver_GPIO0.Setup(BTN_SW3, Button_Event);
    Driver_GPIO0.SetDirection(BTN_SW3, ARM_GPIO_INPUT);
    Driver_GPIO0.SetPullResistor(BTN_SW3, ARM_GPIO_PULL_UP);
    Driver_GPIO0.SetEventTrigger(BTN_SW3, ARM_GPIO_TRIGGER_FALLING_EDGE);

    /* Enable NVIC for PORTC */
    NVIC_ClearPendingIRQ(PORTC_IRQn);
    NVIC_EnableIRQ(PORTC_IRQn);
    NVIC_SetPriority(PORTC_IRQn, 2);

    while (1) {
        /* app chạy vòng lặp vô tận, interrupt sẽ gọi Button_Event() */
    }
}

/* ISR cho PORTC */
void PORTC_IRQHandler(void) {
    uint32_t isfr = PORTC->ISFR;   // đọc cờ ngắt

    if (isfr & (1 << 12)) {  // PC12 gây ngắt (SW2)
        Button_Event(1);
        PORTC->ISFR = (1 << 12);   // clear flag
    }
    if (isfr & (1 << 13)) {  // PC13 gây ngắt (SW3)
        Button_Event(2);
        PORTC->ISFR = (1 << 13);   // clear flag
    }
}
